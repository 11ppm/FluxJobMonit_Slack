#Provides notification functions to keep Flux Monitor healthy.
#If an issue occurs, it will be notified to Slack and Validator will be immediately aware of the issue.
#Please make the following settings appropriately and enable various monitoring functions.
# Flux Monitorを健全に保つための通知機能を提供します。
# 問題が発生した場合、内容はSlackに通知され、Validatorは即座に問題の発生を認識できます。
# 下記の設定を適切に行い、各種監視機能を有効化してください。

##############################################################################################################
#
# 0. Basic settings for notifications
#    通知のための基本設定
#
##############################################################################################################
#SLACK_WEBHOOK_URL      : (Required item)specifies the Slack webhook URL. 
#                         (必須項目)Slackのwebhook URLを指定
SLACK_WEBHOOK_URL="YOUR_WEBHOOK_URL"

#MONITOR_NAME           : (Required item)Server name for notification.
#                         (必須項目)通知に表示するサーバ名
HOST_NAME=$(hostname -f)
IP_ADDRESS=$(ip addr show | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | grep -v '127.0.0.1' | head -n1)
MONITOR_NAME="${HOST_NAME}"_"${IP_ADDRESS}"

#POLLING_INTERVAL       : (Required item)Monitoring interval time (s).
#                         sleep time to reduce the load of continuous execution.
#                         (必須項目)監視間隔（秒）
#                         連続実行の負荷を下げるためのsleep時間
POLLING_INTERVAL=30

##############################################################################################################
#
# 1. Function to detect error information that occurred in JOB from PostgreSQL
#    JOBで発生したエラー情報をPostgreSQLから検出する機能
#-------------------------------------------------------------------------------------------------------------
# You can detect errors for each JOB that have occurred since the last check.
#
# 前回のチェック以降に発生した各JOBのエラーを検出できます。
#
##############################################################################################################
#DB_ERROR_TIMER         : Interval to retrieve error records from DB(table_name:job_spec_errors) (s)
#                         If you specify 0, the setting will be disabled.
#                         DB(テーブル名：job_spec_errors）からエラーレコードを検出する間隔（秒）
#                         0を指定した場合、通知は無効
DB_ERROR_TIMER=120

##############################################################################################################
#
# 2. Function to detect various errors that occur in Plugin Node from log files.
#    Plugin Nodeで発生した種々のエラーをログファイルから検出する機能
#-------------------------------------------------------------------------------------------------------------
# You can detect error messages that have been output to the log file since the last check.
# If the following words are included, it will be detected as an error and the result will be output to a file.
# [Search word]
#    error
#    fail
#    prefix
#
# It is also possible to set the file to be output periodically and not receive notifications.
#
# 前回のチェック以降にログファイルに出力されたエラーメッセージを検出できます。
# 下記のワードが含まれている場合にエラーとして検出し、結果をファイルに出力します。
# [検索ワード]
#    error
#    fail
#    prefix
#
# ファイルだけ定期的に出力し、通知は行わない設定も可能です。
#
##############################################################################################################
#LOG_ERROR_TIMER        : Interval to retrieve error messages from log files (S)
#                         If an error log has occurred since the last check, record the detected log to a file.
#                         If you specify 0, the setting will be disabled.
#                         ログファイルからエラーメッセージを検出する間隔 (秒)
#                         前回確認した以降にエラーログが発生している場合に、検出したログをファイルに記録
#                         0を指定した場合、通知は無効
LOG_ERROR_TIMER=1800

#LOG_ERROR_NOTICE       : Whether to notify when a error log is detected (true or false)
#                         Valid only if LOG_ERROR_TIMER is non-zero.
#                         If true, notify when error log is detected.
#                         If false, only output error log to file.
#                         エラーログ検出時に通知するかどうか(trueまたはfalse)
#                         LOG_ERROR_TIMERが0でない場合のみ有効
#                         trueの場合、エラーログを検出した際に通知
#                         falseの場合、エラーログをファイル出力するのみ
LOG_ERROR_NOTICE=false

#PLI_LOG_FILE           : Log file to search.
#                         Required if LOG_ERROR_TIMER is not non-zero.
#                         検索対象のログファイル
#                         LOG_ERROR_TIMER が0以外の場合は必須
PLI_LOG_FILE=$HOME/.plugin/chainlink_debug.log

#LOG_DIR                : Directory to output error logs.
#                         Required if LOG_ERROR_TIMER is not non-zero.
#                         エラーログを出力するディレクトリ
#                         LOG_ERROR_TIMER が0以外の場合は必須
LOG_DIR=$(cd $(dirname $0);pwd)/fm_log

#ERR_LOG_PREFIX         : Prefix for error logs to create.
#                         Required if LOG_ERROR_TIMER is not non-zero.
#                         作成するエラー ログの接頭辞
#                         LOG_ERROR_TIMER が0以外の場合は必須
ERR_LOG_PREFIX="fm_err_"


##############################################################################################################
#
# 3. Function to detect stagnation in JOB execution
#    JOB実行の停滞を検知する機能
#-------------------------------------------------------------------------------------------------------------
# Checks the elapsed time since the latest JOB was executed and notifies you
# if the time exceeds the set threshold.
# Monitoring is performed using two parameters: checking interval and threshold.
# We recommend that the threshold value is greater than or equal to the total time of 
# Flux Monitor's idleTimerPeriod (or drumbeatSchedule) + maxTaskDuration.
#
# 最新のJOBが実行されてから経過時間をチェックし、設定したしきい値を超えていた場合に通知します。
# チェックする間隔と、しきい値の2つのパラメータで監視を行います。
# しきい値はFlux MonitorのidleTimerPeriod(またはdrumbeatSchedule)+maxTaskDurationの合計時間以上を推奨します。
#
##############################################################################################################
#ROUND_STAGNATION_TIMER : Interval timer for round stagnation (s)
#                         Notify if this amount of time has passed since the last JOB round was run.
#                         If you specify 0, the setting will be disabled.
#                         ラウンド停滞通知間隔（秒）
#                         最新のJOBラウンドが実行されてからSTAGNATION_THRESHOLDの時間を経過した場合に通知
#                         0を指定した場合、通知は無効
ROUND_STAGNATION_TIMER=0

#STAGNATION_THRESHOLD   : Threshold for elapsed time since the most recent JOB round was executed.
#                         Assuming a time equivalent to IdleTimer+maxTaskDuration.
#                         Required if ROUND_STAGNATION_TIMER is not non-zero.
#                         最新のJOBラウンドが実行されてからの経過時間のしきい値
#                         IdleTimer+maxTaskDuration 相当の時間を想定
#                         ROUND_STAGNATION_TIMER が0以外の場合は必須
STAGNATION_THRESHOLD=3650

##############################################################################################################
#
# 4. Function to periodically notify job execution status
#    JOB実行状況を定期的に通知する機能
#-------------------------------------------------------------------------------------------------------------
# Regardless of errors, the latest JOB processing ID will be notified.
# Healthy nodes do not receive error notifications, so they play the role of monitoring
#  whether they are alive or not by sending periodic notifications.
#
# エラーに関係なく、最新のJOBの処理IDを通知します。
# 健全なNodeほどエラー通知がないため、定期的に通知することで死活監視の役目を負います。
#
##############################################################################################################
#PERIODIC_NOTICE_TIMER  : Periodic job execution status notification (s) 
#                         Notifies you of the operating status regardless of whether the job is stopped.
#                         If you specify 0, the setting will be disabled.
#                         定期的なジョブ実行状況通知 (秒) 
#                         ジョブの停止にかかわらずラウンドを通知
#                         0を指定した場合、通知は無効
PERIODIC_NOTICE_TIMER=0


##############################################################################################################
#
# 5. Function to notify the balance of Node address 
#    Nodeアドレスの残高を通知する機能
#-------------------------------------------------------------------------------------------------------------
# You will be notified if the node address balance (XDC) falls below the set threshold.
# This will encourage proper replenishment, as insufficient balance will prevent on-chain operations.
# Nodeアドレスの残高(XDC)が設定したしきい値を下回った際に通知します。
# 残高が不足するとオンチェーン操作ができなくなるため、適切な補充を促します。
#
##############################################################################################################
#ADR_BLC_TIMER          : Interval to check address balance (S)
#                         The address will be assigned to the first one registered.
#                         If you specify 0, the setting will be disabled.
#                         アドレス残高通知間隔 (秒)
#                         通知するアドレスは一番最初に登録されたもののみ
#                         0を指定した場合、通知は無効
ADR_BLC_TIMER=21600

#ADR_BLC_THRESHOLD      : Notify when address balance falls below this value.
#                         Required if LOG_ERROR_TIMER is not non-zero.
#                         アドレス残高がこの値を下回ったときに通知
ADR_BLC_THRESHOLD=50.0
